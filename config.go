package main

import (
  "os"
  "gopkg.in/yaml.v2"
  "log"
)

type Config struct {
  Oauth struct {
    ClientID string `yaml:"clientid"`
    ClientSecret string `yaml:"clientsecret"`
    RedirectURL string `yaml:"redirecturl"`
    Scopes []string `yaml:"scopes"`
  }
  Redis struct {
    StateStore struct {
      Address string `yaml:"address"`
      Port  string `yaml:"port"`
      Password string `yaml:"password"`
      Database int `yaml:"database"`
    }
    CookieStore struct {
      Address string `yaml:"address"`
      Port  string `yaml:"port"`
      Password string `yaml:"password"`
      Database int `yaml:"database"`
    }
  }
  SQL struct {
    Username string `yaml:"username"`
    Password string `yaml:"password"`
    Database string `yaml:"database"`
    Address string `yaml:"address"`
    Port string `yaml:"port"`
  }
  Server struct {
    Port string `yaml:"port"`
    Cert string `yaml:"cert"`
    Key string `yaml:"key"`
  }
  Log struct {
    Path string `yaml:"path"`
  }
}

func LoadConfig(path string) Config {
  var config Config
  file, err := os.Open(path)
  if err != nil{
    log.Fatalf("Failed to open config file located at %s", path)
  }
  fileInfo, err := file.Stat()
  if err != nil{
    log.Fatalf("Failed to stat config file located at %s", path)
  }
  fileSize := fileInfo.Size()
  buffer := make([]byte, fileSize)
	file.Read(buffer)
  err = yaml.Unmarshal(buffer, &config)
  if err != nil {
    log.Fatalf("Config data is most likely malformed at %s: %s", path, err)
  }
  return config
}
